# Import result dataset
comp1 <- read_excel("C:/Users/AndrésLagerlöf/OneDrive - Andrés Lagerlöf Konsulttjänst AB/Övrigt/Fäktning/KM/KM_webb/fff_km/KM_deltävlingar.xlsx")
View(comp1)
# Add new variable "points"
tot <- comp1 %>% mutate(points = case_when(
place == 1 ~ 25,
place == 2 ~ 22,
place == 3 ~ 19,
place == 4 ~ 17,
place == 5 ~ 15,
place == 6 ~ 13,
place == 7 ~ 12,
place == 8 ~ 11,
place == 9 ~ 10,
place == 10 ~ 9,
place == 11 ~ 8,
place == 12 ~ 7,
place == 13 ~ 6,
place == 14 ~ 5,
place == 15 ~ 4,
place == 16 ~ 3,
place == 17 ~ 2,
TRUE ~ 1
))
View(tot)
# Add new variable "points"
tot <- comp1 %>% mutate(points = case_when(
place == 1 ~ 25,
place == 2 ~ 22,
place == 3 ~ 19,
place == 4 ~ 17,
place == 5 ~ 15,
place == 6 ~ 13,
place == 7 ~ 12,
place == 8 ~ 11,
place == 9 ~ 10,
place == 10 ~ 9,
place == 11 ~ 8,
place == 12 ~ 7,
place == 13 ~ 6,
place == 14 ~ 5,
place == 15 ~ 4,
place == 16 ~ 3,
place == 17 ~ 2,
TRUE ~ 1
))
# Add new variable "points"
tot <- comp1 %>% mutate(points = case_when(
Place == 1 ~ 25,
Place == 2 ~ 22,
Place == 3 ~ 19,
Place == 4 ~ 17,
Place == 5 ~ 15,
Place == 6 ~ 13,
Place == 7 ~ 12,
Place == 8 ~ 11,
Place == 9 ~ 10,
Place == 10 ~ 9,
Place == 11 ~ 8,
Place == 12 ~ 7,
Place == 13 ~ 6,
Place == 14 ~ 5,
Place == 15 ~ 4,
Place == 16 ~ 3,
Place == 17 ~ 2,
TRUE ~ 1
))
View(tot)
## -- Change format for output - create "pivot table" with points per competition
piv_comp_1 <- tot %>%
select(Name, Place, points) %>%
spread(Place, points)
View(piv_comp_1)
# Create tabel output using kableExtra package
kable(tot) %>%
kable_styling(bootstrap_options = "striped", full_width = F, position = "left")
library(kableExtra)
# Create tabel output using kableExtra package
kable(tot) %>%
kable_styling(bootstrap_options = "striped", full_width = F, position = "left")
# Create a table with the DT package
datatable( tot
)
# Create a table with the DT package
datatable( tot,
colnames = c("Namn" = Name, "Placering" = Place, "Poäng" = points)
)
# Create a table with the DT package
datatable( tot,
colnames = c("Namn" = "Name", "Placering" = "Place", "Poäng" = "points")
)
# Create a table with the DT package
datatable( tot,
colnames = c("Namn" = "Name", "Placering" = "Place", "Poäng" = "points"),
caption = "Tabell 1: Placering efter KM, deltävling 1"
)
library(tidyverse)
library(readr)
library(readxl)
library(DT)
library(kableExtra)
library(ggplot2)
# Create a table with the DT package
datatable( tot,
colnames = c("Namn" = "Name", "Placering" = "Place", "Poäng" = "points"),
caption = "Tabell 1: Placering efter KM, deltävling 1",
options = list(dom = 't'))
# Create a table with the DT package
datatable( tot,
colnames = c("Namn" = "Name", "Placering" = "Place", "Poäng" = "points"),
caption = "Tabell 1: Placering efter KM, deltävling 1")
# Create a table with the DT package
datatable( tot,
colnames = c("Namn" = "Name", "Placering" = "Place", "Poäng" = "points"),
caption = "Tabell 1: Placering efter KM, deltävling 1",
options = list(pageLength = 18)) %>%
formatStyle('points',  color = 'steelblue', fontWeight = 'bold')
# Create a table with the DT package
datatable( tot,
colnames = c("Namn" = "Name", "Placering" = "Place", "Poäng" = "points"),
caption = "Tabell 1: Placering efter KM, deltävling 1",
options = list(pageLength = 18)) %>%
formatStyle('Poäng',  color = 'steelblue', fontWeight = 'bold')
rmarkdown::render_site()
rmarkdown::render_site()
rmarkdown::render_site()
rmarkdown::render_site()
rmarkdown::render_site()
rmarkdown::render_site()
library(tidyverse)
library(readr)
library(readxl)
library(DT)
library(kableExtra)
# Load dataset
result_hist <- read_excel("C:/Users/AndrésLagerlöf/OneDrive - Andrés Lagerlöf Konsulttjänst AB/Övrigt/Fäktning/KM/KM_webb/fff_km/KM_tabeller.xlsx")
View(result_hist)
# Create a long dataset
long_hist <- result_hist %>% gather(place, name, -1)
View(long_hist)
## I have changed original data - this not needed now
# long_hist <- long_hist %>% mutate(res =
#  case_when(
#  results == "Segrare" ~ "1:a",
#  results == "2:a" ~ "2:a",
#  results == "3:a" ~ "3:a",
#  TRUE ~ "fel"
#  ))
# Change place variable to levels
long_hist$result <- factor(long_hist$place, ordered = TRUE,
levels = c("1:a", "2:a", "3:a"))
# Create df with name and no of entries
no_top3 <- long_hist %>% group_by(name) %>% count() %>% arrange(desc(n))
View(no_top3)
# Separate name variable in no_top3 df
no_top3 <- no_top3 %>% separate(name, into = c("firstname", "lastname"))
# Create datafreme with name, result and count of result
stat2 <- long_hist %>% group_by(name, result) %>% count() %>%arrange(desc(n)) %>%  arrange(result) #%>%  arrange(desc(n))
View(stat2)
# Separate name variable in stat2 df
stat2 <- stat2 %>% separate(name, into = c("firstname", "lastname"))
# Calculate no of years
long_hist$Year %>%  n_distinct()
# Remove variable place
long_hist <- long_hist %>%  select(-place)
datatable(
long_hist,
caption = "Lista över resultat 2006 till 2018",
extensions = 'Buttons', options = list(
dom = 'Bfrtip',
buttons = c( 'csv', 'excel', 'pdf', 'print')
)
)
rmarkdown::render_site()
rmarkdown::render_site()
rmarkdown::render_site()
rmarkdown::render_site()
rmarkdown::render_site()
rmarkdown::render_site()
library(tidyverse)
library(readr)
library(readxl)
library(DT)
library(kableExtra)
library(ggplot2)
library(readxl)
KM_plakett <- read_excel("C:/Users/AndrésLagerlöf/OneDrive - Andrés Lagerlöf Konsulttjänst AB/Övrigt/Fäktning/KM/KM_webb/fff_km/KM_plakett.xlsx")
View(KM_plakett)
KM_plakett %>% group_by(Name)
KM_plakett<- KM_plakett %>% as.character(Year)
KM_plakett<- KM_plakett %>% as.character(KM_plakett$Year)
KM_plakett %>% group_by(Name) %>% summarise(antal = count(Year))
# Import dataset with winners (plakett)
KM_plakett <- read_excel("C:/Users/AndrésLagerlöf/OneDrive - Andrés Lagerlöf Konsulttjänst AB/Övrigt/Fäktning/KM/KM_webb/fff_km/KM_plakett.xlsx",
col_types = c("text", "text"))
KM_plakett %>% group_by(Name) %>% summarise(antal = count(Year))
KM_plakett %>% group_by(Name) %>% count(Year)
KM_plakett %>% group_by(Name) %>% count()
KM_plakett %>% group_by(Name) %>% count() %>% arrange(desc())
KM_plakett %>% group_by(Name) %>% count() %>% arrange(desc(n))
library(tidyverse)
library(readr)
library(readxl)
library(DT)
library(kableExtra)
library(ggplot2)
# Import dataset with winners (plakett)
KM_plakett <- read_excel("C:/Users/AndrésLagerlöf/OneDrive - Andrés Lagerlöf Konsulttjänst AB/Övrigt/Fäktning/KM/KM_webb/fff_km/KM_plakett.xlsx",
col_types = c("text", "text"))
# Import dataset with winners (plakett)
KM_plakett <- read_excel("C:/Users/AndrésLagerlöf/OneDrive - Andrés Lagerlöf Konsulttjänst AB/Övrigt/Fäktning/KM/KM_webb/fff_km/KM_plakett.xlsx",
col_types = c("text", "text"))
View(KM_plakett)
KM_plakett %>% group_by(Name) %>% count() %>% arrange(desc(n))
no_victories <-  KM_plakett %>% group_by(Name) %>% count() %>% arrange(desc(n))
View(no_victories)
one_timers <- no_victories %>% filter(n==1)
View(one_timers)
View(one_timers)
multi_winners <- no_victories %>% filter(!n==1)
View(multi_winners)
View(multi_winners)
multi_winners <- no_victories %>% filter(n>1)
multi_winners %>% sum(n)
sum(multi_winners$n)
multi_winners%>% sum(n)
library(tidyverse)
library(readr)
library(readxl)
library(DT)
library(kableExtra)
# Import dataset with winners (plakett)
KM_plakett <- read_excel("C:/Users/AndrésLagerlöf/OneDrive - Andrés Lagerlöf Konsulttjänst AB/Övrigt/Fäktning/KM/KM_webb/fff_km/KM_plakett.xlsx",
col_types = c("text", "text"))
View(KM_plakett)
# Dataframe of winners and no of wins per person
no_victories <-  KM_plakett %>% group_by(Name) %>% count() %>% arrange(desc(n))
# Dataframe of "one hit wonders"
one_timers <- no_victories %>% filter(n==1)
# Dataframe of winners of 2 or more titles
multi_winners <- no_victories %>% filter(n>1)
View(multi_winners)
View(multi_winners)
View(no_victories)
View(no_victories)
View(one_timers)
View(one_timers)
# Import dataset with winners (plakett)
KM_plakett <- read_excel("C:/Users/AndrésLagerlöf/OneDrive - Andrés Lagerlöf Konsulttjänst AB/Övrigt/Fäktning/KM/KM_webb/fff_km/KM_plakett.xlsx",
col_types = c("text", "text"))
# Dataframe of winners and no of wins per person
no_victories <-  KM_plakett %>% group_by(Name) %>% count() %>% arrange(desc(n))
no_victories(
result_hist,
caption = "Lista över resultat 1944 till 2018",
extensions = 'Buttons', options = list(
dom = 'Bfrtip',
buttons = c( 'csv', 'excel', 'pdf', 'print')
)
)
# Import dataset with winners (plakett)
KM_plakett <- read_excel("C:/Users/AndrésLagerlöf/OneDrive - Andrés Lagerlöf Konsulttjänst AB/Övrigt/Fäktning/KM/KM_webb/fff_km/KM_plakett.xlsx",
col_types = c("text", "text"))
# Dataframe of winners and no of wins per person
no_victories <-  KM_plakett %>% group_by(Name) %>% count() %>% arrange(desc(n))
datatable(
no_victories,
caption = "Lista över resultat 1944 till 2018",
extensions = 'Buttons', options = list(
dom = 'Bfrtip',
buttons = c( 'csv', 'excel', 'pdf', 'print')
)
)
rmarkdown::render_site()
rmarkdown::render_site()
rmarkdown::render_delayed()
rmarkdown::render_site()
rmarkdown::render_site()
rmarkdown::render_site()
library(tidyverse)
head(mpg)
str(mpg)
ggplot(mpg) +
geom_bar(aes(x = class))
ggplot(mpg) +
geom_bar(aes(x = class), fill = 'blue')
ggplot(mpg) +
geom_bar(aes(x = class), fill = '#0FA173')
ggplot(mpg) +
geom_bar(aes(x = class, fill = drv))
ggplot(mpg) +
geom_bar(aes(x = class, fill = factor(cyl)))
datatable(
one_timers,
options = list(pageLength = 11),
caption = "Tabell över fäktare som vunnit KM 1 gång"
)
library(tidyverse)
library(readr)
library(readxl)
library(DT)
library(kableExtra)
library(ggplot2)
datatable(
one_timers,
options = list(pageLength = 11),
caption = "Tabell över fäktare som vunnit KM 1 gång"
)
# Load dataset
result_hist <- read_excel("C:/Users/AndrésLagerlöf/OneDrive - Andrés Lagerlöf Konsulttjänst AB/Övrigt/Fäktning/KM/KM_webb/fff_km/KM_tabeller.xlsx")
# View(result_hist)
# Create a long dataset
long_hist <- result_hist %>% gather(place, name, -1)
# View(long_hist)
## I have changed original data - this not needed now
# long_hist <- long_hist %>% mutate(res =
#  case_when(
#  results == "Segrare" ~ "1:a",
#  results == "2:a" ~ "2:a",
#  results == "3:a" ~ "3:a",
#  TRUE ~ "fel"
#  ))
# Add new variable result based on variable but as type level
long_hist$result <- factor(long_hist$place, ordered = TRUE,
levels = c("1:a", "2:a", "3:a"))
# Remove variable place
long_hist <- long_hist %>%  select(-place)
# Create df with name and no of entries
no_top3 <- long_hist %>% group_by(name) %>% count() %>% arrange(desc(n))
# View(no_top3)
# Separate name variable in no_top3 df
no_top3 <- no_top3 %>% separate(name, into = c("firstname", "lastname"))
# Create datafreme with name, result and count of result
stat2 <- long_hist %>% group_by(name, result) %>% count() %>%arrange(desc(n)) %>%  arrange(result) #%>%  arrange(desc(n))
# View(stat2)
# Separate name variable in stat2 df
stat2 <- stat2 %>% separate(name, into = c("firstname", "lastname"))
# Calculate no of years
long_hist$Year %>%  n_distinct()
View(stat2)
stat2 <-  stat2 %>% arrange(desc(n))
stat_2ormore %>% filter(n>1)
stat_2ormore <- stat2 %>% filter(n>1)
View(stat_2ormore)
ggplot(stat_2ormore) +
geom_bar(aes(x = firstname, fill = factor(result)))
ggplot(mpg) +
geom_bar(aes(x = class, fill = cyl))
ggplot(mpg) +
geom_bar(aes(x = class, fill = factor(cyl)))
geom_bar(aes(x = class, fill = factor(cyl)))
ggplot(mpg) +
geom_bar(aes(x = class, fill = factor(cyl)),
position = position_dodge(preserve = 'single'))
by_hwy_mpg <- mpg %>% group_by(class) %>% summarise(hwy_mpg = mean(hwy))
by_hwy_mpg <- mpg %>% group_by(class) %>% summarise(hwy_mpg = mean(hwy))
ggplot(by_hwy_mpg) +
geom_bar(aes(x = class, y = hwy_mpg), stat = 'identity')
ggplot(by_hwy_mpg) +
geom_col(aes(x = class, y = hwy_mpg))
ggplot(mpg) +
geom_bar(aes(x = class), fill = '#003366', color = '#add8e6')
ggplot(stat_2ormore) +
geom_bar(aes(x = firstname, fill = factor(result)))
ggplot(stat_2ormore) +
geom_bar(aes(x = firstname, y= result, fill = factor(result)))
ggplot(stat_2ormore) +
geom_bar(aes(x = firstname, y=  factor(result)))
ggplot(stat_2ormore) +
geom_bar(aes(x = firstname, y=result))
ggplot(stat_2ormore) +
geom_bar(aes(x = result, y=firstname))
ggplot(stat_2ormore) +
geom_bar(aes(x = result, fill = firstname))
ggplot(stat_2ormore) +
geom_bar(aes(x = result, fill = factor(firstname)))
devtools::install_github('rstudio/pagedown')
install.packages("devtools")
install.packages("pagedown")
library(pagedown)
remotes::install_github('rstudio/pagedown')
library(pagedown)
setwd("C:/Users/AndrésLagerlöf/OneDrive - MyBenefit AB/02 Kunder/01 Aktiva kunder/PostNord/04 Fakturaunderlag/03 Producerade filer 2019/09_Sep_2019/Bearbetning")
library(tidyverse)
library(readr)
library(readxl)
overall <- read_excel("C:/Users/AndrésLagerlöf/OneDrive - MyBenefit AB/02 Kunder/01 Aktiva kunder/PostNord/04 Fakturaunderlag/03 Producerade filer 2019/09_Sep_2019/Bearbetning/sammanstallning_sep19.xlsx")
View(overall)
grp <- read_csv("C:/Users/AndrésLagerlöf/OneDrive - MyBenefit AB/02 Kunder/01 Aktiva kunder/PostNord/04 Fakturaunderlag/03 Producerade filer 2019/09_Sep_2019/Bearbetning/PostNord Group AB - 2019-10-01 201913.csv",
col_types = cols(`Beställningsdatum` = col_date(format = "%Y-%m-%d")),
skip = 9)
View(grp)
# PostNord Sverige: sve -- no 2
sve <- read_csv("C:/Users/AndrésLagerlöf/OneDrive - MyBenefit AB/02 Kunder/01 Aktiva kunder/PostNord/04 Fakturaunderlag/03 Producerade filer 2019/09_Sep_2019/Bearbetning/PostNord Sverige AB - 2019-10-01 201914.csv",
col_types = cols(`Beställningsdatum` = col_date(format = "%Y-%m-%d")),
skip = 9)
View(sve)
# TPL: tpl -- no 3
tpl <- read_csv("C:/Users/AndrésLagerlöf/OneDrive - MyBenefit AB/02 Kunder/01 Aktiva kunder/PostNord/04 Fakturaunderlag/03 Producerade filer 2019/09_Sep_2019/Bearbetning/PostNord Logistics TPL AB - 2019-10-01 151023.csv",
col_types = cols(`Beställningsdatum` = col_date(format = "%Y-%m-%d")),
skip = 9)
View(tpl)
# Tidningstjänst: tab -- no 5
tab <- read_csv("C:/Users/AndrésLagerlöf/OneDrive - MyBenefit AB/02 Kunder/01 Aktiva kunder/PostNord/04 Fakturaunderlag/03 Producerade filer 2019/09_Sep_2019/Bearbetning/Tidningstjänst AB - 2019-10-01 191130.csv",
col_types = cols(`Beställningsdatum` = col_date(format = "%Y-%m-%d")),
skip = 9)
View(tab)
# Kvitton: kvitton -- no 4
kvitton <- read_csv("C:/Users/AndrésLagerlöf/OneDrive - MyBenefit AB/02 Kunder/01 Aktiva kunder/PostNord/04 Fakturaunderlag/03 Producerade filer 2019/09_Sep_2019/Bearbetning/PostNord - 2019-10-01 201909.csv",
col_types = cols(`Beställningsdatum` = col_date(format = "%Y-%m-%d")),
skip = 9)
View(kvitton)
#  Create variable for invoice date
inv_date <- "2019-10-02"
##  Check sums for each invoice
# PN Grp -- no 1
grp %>% summarise(tot_netto = sum(`Belopp exkl.moms`),tot_moms = sum(`Belopp inkl. moms`)-sum(`Belopp exkl.moms`),
tot_bel = sum(`Belopp inkl. moms`))
# PN Sv -- no 2
sve %>% summarise(tot_netto = sum(`Belopp exkl.moms`),tot_moms = sum(`Belopp inkl. moms`)-sum(`Belopp exkl.moms`),
tot_bel = sum(`Belopp inkl. moms`))
# TPL -- no 3
tpl %>% summarise(tot_netto = sum(`Belopp exkl.moms`),tot_moms = sum(`Belopp inkl. moms`)-sum(`Belopp exkl.moms`),
tot_bel = sum(`Belopp inkl. moms`))
# PN Kvitton -- no 4
kvitton %>% summarise(tot_netto = sum(`Belopp exkl.moms`),tot_moms = sum(`Belopp inkl. moms`)-sum(`Belopp exkl.moms`),
tot_bel = sum(`Belopp inkl. moms`))
# PN TAB -- no 5
tab %>% summarise(tot_netto = sum(`Belopp exkl.moms`),tot_moms = sum(`Belopp inkl. moms`)-sum(`Belopp exkl.moms`),
tot_bel = sum(`Belopp inkl. moms`))
## Add fakturanummer and company name to each specification
PN_Group <- grp %>% mutate(aw_inv_no = 1123916, Company_Name = "PostNord Group AB")
PN_Sv <- sve %>% mutate(aw_inv_no = 1123803, Company_Name = "PostNord Sverige AB")
TPL <- tpl %>% mutate(aw_inv_no = 1123801, Company_Name = "PostNord TPL AB")
PN_Kvitton <- kvitton %>% mutate(aw_inv_no = 1123890, Company_Name = "PostNord - kvitton")
TAB <- tab %>% mutate(aw_inv_no = 1123859, Company_Name = "Tidningstjänst AB")
## Create a dataframe containing all invoice specifications named "tot"
tot <- bind_rows(PN_Group, PN_Sv)
tot <- bind_rows(tot, TPL)
tot <- bind_rows(tot, TAB)
tot <- bind_rows(tot, PN_Kvitton)
View(tot)
# tot <- bind_rows(tot, Thermo)
# tot <- bind_rows(tot, Fors)
View(tot)
# Add invoice description to tot, 2 versions one for kvitton and one for the others
tot <- tot %>% mutate(Invoice_Description = case_when(
Company_Name == "PostNord - kvitton" ~ "Hanteringsavgift kvittoköp (per kvittoregistrering)",
TRUE ~ "Friskvård och motion" ) )
## Clean information on variable "Kostnadsställe" in 2 steps
# Step 1: Separate variable "Kosnadsstalle" to 2 new variables: "org" and "kst2"
tot <- tot %>% separate("Kostnadsställe" ,into = c("org", "Cost_Center"), sep = "-cc-" )
# Step 2: Create new variable "Org_Nr" containing only the org.no from variable "org"
tot$Org_Nr <- gsub("cmp-", "", tot$org)
# Create new variable for VAT amount
tot <- tot %>% mutate(VAT_amount = `Belopp inkl. moms` - `Belopp exkl.moms`)
# Add variables "Invoice_Number", "Invoice_Date", "GL_Account"
tot <- tot %>% mutate(Invoice_Number = "", Invoice_Date = inv_date, GL_Account = "769300" )
# Change names to columns
tot <- tot %>% rename(Amount_excl_Vat = `Belopp exkl.moms`,
Total_amount = `Belopp inkl. moms`, Name = Namn, Anstallningsnummer = Anställningsnummer)
# Check sums
tot %>% group_by(aw_inv_no) %>%
summarise(tot_netto = sum(Amount_excl_Vat),tot_moms = sum(VAT_amount),
tot_bel = sum(Total_amount))
# Step 1: Create separate dataframes for each Org_Nr
# - PN_SV
myben_PN_Sv <- tot %>% filter(Org_Nr == "556711-5695") %>%
select(Invoice_Number, Invoice_Date, Invoice_Description, GL_Account,
Amount_excl_Vat, VAT_amount, Total_amount, Cost_Center,
Name, Anstallningsnummer, Company_Name)
# - PN_Grp including Forsäkring
myben_PN_Grp <- tot %>% filter(Org_Nr %in% c("556128-6559","802404-2635")) %>%
select(Invoice_Number, Invoice_Date, Invoice_Description, GL_Account,
Amount_excl_Vat, VAT_amount, Total_amount, Cost_Center,
Name, Anstallningsnummer, Company_Name)
# - PN_TPL
myben_PN_TPL <- tot %>% filter(Org_Nr == "556161-7191") %>%
select(Invoice_Number, Invoice_Date, Invoice_Description, GL_Account,
Amount_excl_Vat, VAT_amount, Total_amount, Cost_Center,
Name, Anstallningsnummer, Company_Name)
# - PN_TS
myben_PN_TS <- tot %>% filter(Org_Nr == "556039-7480") %>%
select(Invoice_Number, Invoice_Date, Invoice_Description, GL_Account,
Amount_excl_Vat, VAT_amount, Total_amount, Cost_Center,
Name, Anstallningsnummer, Company_Name)
# Date and file type
date <- "20191002"   # Change each month!
file_type <- "csv"
sv <- "PN_Sv_myBen"
sv_date <- paste(sv, date, sep = "_")
sv_date_type <- paste(sv_date, file_type, sep = ".")
#company 2 - grp
gp <- "PN_Grp_myBen"
gp_date <- paste(gp, date, sep = "_")
gp_date_type <- paste(gp_date, file_type, sep = ".")
# company 3 - ts
ts <- "PN_TS_myBen"
ts_date <- paste(ts, date, sep = "_")
ts_date_type <- paste(ts_date, file_type, sep = ".")
# company 4 - tp
tp <- "PN_TPL_myBen"
tp_date <- paste(tp, date, sep = "_")
tp_date_type <- paste(tp_date, file_type, sep = ".")
# - PN_SV
write_excel_csv2(myben_PN_Sv, sv_date_type)
# - PN_Grp
write_excel_csv2(myben_PN_Grp, gp_date_type)
# - PN_TPL
write_excel_csv2(myben_PN_TPL, tp_date_type)
# - PN_TS
write_excel_csv2(myben_PN_TS, ts_date_type)
