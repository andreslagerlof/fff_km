# Change place variable to levels
long_hist$result <- factor(long_hist$place, ordered = TRUE,
levels = c("1:a", "2:a", "3:a"))
# Create df with name and no of entries
stat2 <- long_hist %>% group_by(name) %>% count() %>% arrange(desc(n))
View(stat2)
no_top3 <- long_hist %>% group_by(name) %>% count() %>% arrange(desc(n))
View(no_top3)
# Create datafreme with name, result and count of result
stat3 <- long_hist %>% group_by(name, result) %>% count() %>%arrange(desc(n)) %>%  arrange(result) #%>%  arrange(desc(n))
View(stat3)
# Separate name variable in stat3 df
stat3 <- stat3 %>% separate(name, into = c("firstname", "lastname"))
# Load dataset
result_hist <- read_excel("C:/Users/AndrésLagerlöf/OneDrive - Andrés Lagerlöf Konsulttjänst AB/Övrigt/Fäktning/KM/KM_webb/fff_km/KM_tabeller.xlsx")
View(result_hist)
long_hist <- result_hist %>% gather(place, name, -1)
View(long_hist)
# Change place variable to levels
long_hist$result <- factor(long_hist$place, ordered = TRUE,
levels = c("1:a", "2:a", "3:a"))
# Create df with name and no of entries
no_top3 <- long_hist %>% group_by(name) %>% count() %>% arrange(desc(n))
View(no_top3)
# Create datafreme with name, result and count of result
stat2 <- long_hist %>% group_by(name, result) %>% count() %>%arrange(desc(n)) %>%  arrange(result) #%>%  arrange(desc(n))
View(stat2)
# Separate name variable in stat3 df
stat2 <- stat2 %>% separate(name, into = c("firstname", "lastname"))
stat2 %>%
ggplot( aes(x=reorder(firstname, n), n,)) +
geom_bar(stat = "identity", fill = "chocolate") + # ,
theme_minimal() +
coord_flip() +
labs(title="Antal top 3 placeringar",
subtitle = "Perioden 2006 till 2018",
caption = "Källa: Janne Tivenius",
x= "Fäktare",
y="Antal top 3") +
geom_text(aes(label = n),
hjust = -0.3,
color = "#1380A1")
stat2 %>%
ggplot( aes(x=reorder(firstname, n), n,)) +
geom_bar(stat = "identity", fill = "chocolate") + # ,
theme_minimal() +
coord_flip() +
labs(title="Antal top 3 placeringar",
subtitle = "Perioden 2006 till 2018",
caption = "Källa: Janne Tivenius",
x= "Fäktare",
y="Antal top 3") +
geom_text(aes(label = n),
hjust = -1,
color = "#1380A1")
# Create barplot of top 3
no_top3 %>%
ggplot( aes(x=reorder(firstname, n), n,)) +
geom_bar(stat = "identity", fill = "chocolate") + # ,
theme_minimal() +
coord_flip() +
labs(title="Antal top 3 placeringar",
subtitle = "Perioden 2006 till 2018",
caption = "Källa: Janne Tivenius",
x= "Fäktare",
y="Antal top 3") +
geom_text(aes(label = n),
hjust = -1,
color = "#1380A1")
# Separate name variable in stat3 df
stat3 <- stat3 %>% separate(name, into = c("firstname", "lastname"))
# Separate name variable in stat3 df
no_top3 <- no_top3 %>% separate(name, into = c("firstname", "lastname"))
# Create barplot of top 3
no_top3 %>%
ggplot( aes(x=reorder(firstname, n), n,)) +
geom_bar(stat = "identity", fill = "chocolate") + # ,
theme_minimal() +
coord_flip() +
labs(title="Antal top 3 placeringar",
subtitle = "Perioden 2006 till 2018",
caption = "Källa: Janne Tivenius",
x= "Fäktare",
y="Antal top 3") +
geom_text(aes(label = n),
hjust = -1,
color = "#1380A1")
# Create barplot of top 3
no_top3 %>%
ggplot( aes(x=reorder(firstname, n), n,)) +
geom_bar(stat = "identity", fill = "chocolate") + # ,
theme_minimal() +
coord_flip() +
labs(title="Antal top 3 placeringar",
subtitle = "Perioden 2006 till 2018",
caption = "Källa: Janne Tivenius",
x= "Fäktare",
y="Antal top 3") +
geom_text(aes(label = n),
hjust = -0.25,
color = "#1380A1")
# Create barplot of winners
stat2 %>% filter(result == "1:a") %>%
ggplot( aes(x=reorder(firstname, n), n)) +
geom_bar(stat = "identity", fill = "darkolivegreen") +
theme_minimal()+
coord_flip() +
labs(title="Antal segrar per fäktare",
subtitle = "Perioden 2006 till 2018",
caption = "Källa: Janne Tivenius",
x= "Fäktare",
y="Antal segrar") +
geom_text(aes(label = n),
hjust = -0.3,
color = "darkgreen")
stat2 %>% filter(result == "2:a") %>%
ggplot( aes(x=reorder(firstname, n), n)) +
geom_bar(stat = "identity", fill = "dodgerblue") +
theme_minimal()+
coord_flip() +
labs(title="Antal 2:a platser per fäktare",
subtitle = "Perioden 2006 till 2018",
caption = "Källa: Janne Tivenius",
x= "Fäktare",
y="Antal 2:a placeringar") +
geom_text(aes(label = n),
hjust = -0.3,
color = "#1380A1")
```{r thirds, echo=FALSE}
stat2 %>% filter(result == "3:a") %>%
ggplot( aes(x=reorder(firstname, n), n)) +
geom_bar(stat = "identity", fill = "wheat4") +
theme_minimal()+
coord_flip() +
labs(title="Antal 3:e platser per fäktare",
subtitle = "Perioden 2006 till 2018",
caption = "Källa: Janne Tivenius",
x= "Fäktare",
y="Antal 3:e platser") +
geom_text(aes(label = n),
hjust = -0.3)
# Create table
datatable(
result_hist,
caption = "Lista över placeringar 1-3 från 2006 till 2018",
extensions = 'Buttons', options = list(
dom = 'Bfrtip',
buttons = c( 'csv', 'excel', 'pdf', 'print'),
initComplete = JS(
"function(settings, json) {",
"$(this.api().table().header()).css({'background-color': '#000', 'color': '#fff'});",
"}")
)
)
rmarkdown::render_site()
# Create table
datatable(
result_hist,
caption = "Lista över placeringar 1-3 från 2006 till 2018",
#  extensions = 'Buttons', options = list(
#    dom = 'Bfrtip',
#    buttons = c( 'csv', 'excel', 'pdf', 'print'),
#    initComplete = JS(
#   function(settings, json) {",
#    "$(this.api().table().header()).css({'background-color': '#000', 'color': '#fff'});",
#    "}")
#  )
)
# Create table
datatable(
result_hist,
caption = "Lista över placeringar 1-3 från 2006 till 2018",
colnames = c("Year" = "1:a", "2:a" = "2:a", "3:a" = "3:a"),
extensions = 'Buttons', options = list(
dom = 'Bfrtip',
buttons = c( 'csv', 'excel', 'pdf', 'print')
)
)
# Create table
datatable(
result_hist,
caption = "Lista över placeringar 1-3 från 2006 till 2018",
# colnames = c("Year" = "1:a", "2:a" = "2:a", "3:a" = "3:a"),
extensions = 'Buttons', options = list(
dom = 'Bfrtip',
buttons = c( 'csv', 'excel', 'pdf', 'print')
)
)
# Create table
datatable(
result_hist,
caption = "Lista över placeringar 1-3 från 2006 till 2018",
extensions = 'Buttons', options = list(
dom = 'Bfrtip',
buttons = c( 'csv', 'excel', 'pdf', 'print')
)
)
# Create table
datatable(
result_hist,
caption = "Lista över placeringar 1-3 från 2006 till 2018")
library(tidyverse)
library(readr)
library(readxl)
library(DT)
library(kableExtra)
library(ggplot2)
# Create table
datatable(
result_hist,
caption = "Lista över placeringar 1-3 från 2006 till 2018")
# Create table
kable(result_hist) %>%
kable_styling(bootstrap_options = "striped", full_width = F, position = "left")
datatable(
result_hist,
caption = "Lista över placeringar 1-3 från 2006 till 2018",
extensions = 'Buttons', options = list(
dom = 'Bfrtip',
buttons = c( 'csv', 'excel', 'pdf', 'print')
)
)
datatable(
result_hist
)
kable(result_hist)
datatable(result_hist)
# Load dataset
result_hist <- read_excel("C:/Users/AndrésLagerlöf/OneDrive - Andrés Lagerlöf Konsulttjänst AB/Övrigt/Fäktning/KM/KM_webb/fff_km/KM_tabeller.xlsx")
View(result_hist)
kable(points) %>%
kable_styling(bootstrap_options = "striped", full_width = F, position = "left")
# Create tabel output using kableExtra package
kable(points) %>%
kable_styling(bootstrap_options = "striped", full_width = F, position = "left")
library(tidyverse)
library(readr)
library(readxl)
library(DT)
library(kableExtra)
library(ggplot2)
# Load dataset
result_hist <- read_excel("C:/Users/AndrésLagerlöf/OneDrive - Andrés Lagerlöf Konsulttjänst AB/Övrigt/Fäktning/KM/KM_webb/fff_km/KM_tabeller.xlsx")
View(result_hist)
datatable(
result_hist,
caption = "Lista över placeringar 1-3 från 2006 till 2018",
extensions = 'Buttons', options = list(
dom = 'Bfrtip',
buttons = c( 'csv', 'excel', 'pdf', 'print')
)
)
datatable(
result_hist
)
# Import file and create dataframe
points <- read_excel("C:/Users/AndrésLagerlöf/OneDrive - Andrés Lagerlöf Konsulttjänst AB/Övrigt/Fäktning/KM/KM_webb/fff_km/Poängsystem.xlsx")
View(points)
# Create tabel output using kableExtra package
kable(points) %>%
kable_styling(bootstrap_options = "striped", full_width = F, position = "left")
datatable(
result_hist
)
# Load dataset
result_hist <- read_excel("C:/Users/AndrésLagerlöf/OneDrive - Andrés Lagerlöf Konsulttjänst AB/Övrigt/Fäktning/KM/KM_webb/fff_km/KM_tabeller.xlsx")
View(result_hist)
# Create tabel output using kableExtra package
kable(points) %>%
kable_styling(bootstrap_options = "striped", full_width = F, position = "left")
# Load dataset
result_hist <- read_excel("C:/Users/AndrésLagerlöf/OneDrive - Andrés Lagerlöf Konsulttjänst AB/Övrigt/Fäktning/KM/KM_webb/fff_km/KM_tabeller.xlsx")
View(result_hist)
# Create a long dataset
long_hist <- result_hist %>% gather(place, name, -1)
View(long_hist)
## I have changed original data - this not needed now
# long_hist <- long_hist %>% mutate(res =
#  case_when(
#  results == "Segrare" ~ "1:a",
#  results == "2:a" ~ "2:a",
#  results == "3:a" ~ "3:a",
#  TRUE ~ "fel"
#  ))
# Change place variable to levels
long_hist$result <- factor(long_hist$place, ordered = TRUE,
levels = c("1:a", "2:a", "3:a"))
# Create df with name and no of entries
no_top3 <- long_hist %>% group_by(name) %>% count() %>% arrange(desc(n))
View(no_top3)
# Separate name variable in no_top3 df
no_top3 <- no_top3 %>% separate(name, into = c("firstname", "lastname"))
# Create datafreme with name, result and count of result
stat2 <- long_hist %>% group_by(name, result) %>% count() %>%arrange(desc(n)) %>%  arrange(result) #%>%  arrange(desc(n))
View(stat2)
# Separate name variable in stat2 df
stat2 <- stat2 %>% separate(name, into = c("firstname", "lastname"))
# Calculate no of years
long_hist$year %>%  n_distinct()
# Create a long dataset
long_hist <- result_hist %>% gather(place, name, -1)
View(long_hist)
## I have changed original data - this not needed now
# long_hist <- long_hist %>% mutate(res =
#  case_when(
#  results == "Segrare" ~ "1:a",
#  results == "2:a" ~ "2:a",
#  results == "3:a" ~ "3:a",
#  TRUE ~ "fel"
#  ))
# Change place variable to levels
long_hist$result <- factor(long_hist$place, ordered = TRUE,
levels = c("1:a", "2:a", "3:a"))
# Create df with name and no of entries
no_top3 <- long_hist %>% group_by(name) %>% count() %>% arrange(desc(n))
View(no_top3)
# Separate name variable in no_top3 df
no_top3 <- no_top3 %>% separate(name, into = c("firstname", "lastname"))
# Create datafreme with name, result and count of result
stat2 <- long_hist %>% group_by(name, result) %>% count() %>%arrange(desc(n)) %>%  arrange(result) #%>%  arrange(desc(n))
View(stat2)
# Separate name variable in stat2 df
stat2 <- stat2 %>% separate(name, into = c("firstname", "lastname"))
# Calculate no of years
long_hist$Year %>%  n_distinct()
# Load dataset
result_hist <- read_excel("C:/Users/AndrésLagerlöf/OneDrive - Andrés Lagerlöf Konsulttjänst AB/Övrigt/Fäktning/KM/KM_webb/fff_km/KM_tabeller.xlsx")
View(result_hist)
rmarkdown::render_site()
rmarkdown::render_site()
rmarkdown::render_site()
rmarkdown::render_site()
rmarkdown::render_site()
library(tidyverse)
library(readr)
library(readxl)
library(DT)
# Import result dataset
comp1 <- read_excel("C:/Users/AndrésLagerlöf/OneDrive - Andrés Lagerlöf Konsulttjänst AB/Övrigt/Fäktning/KM/KM_webb/fff_km/KM_deltävlingar.xlsx")
View(comp1)
# Add new variable "points"
tot <- comp1 %>% mutate(points = case_when(
place == 1 ~ 25,
place == 2 ~ 22,
place == 3 ~ 19,
place == 4 ~ 17,
place == 5 ~ 15,
place == 6 ~ 13,
place == 7 ~ 12,
place == 8 ~ 11,
place == 9 ~ 10,
place == 10 ~ 9,
place == 11 ~ 8,
place == 12 ~ 7,
place == 13 ~ 6,
place == 14 ~ 5,
place == 15 ~ 4,
place == 16 ~ 3,
place == 17 ~ 2,
TRUE ~ 1
))
View(tot)
# Add new variable "points"
tot <- comp1 %>% mutate(points = case_when(
place == 1 ~ 25,
place == 2 ~ 22,
place == 3 ~ 19,
place == 4 ~ 17,
place == 5 ~ 15,
place == 6 ~ 13,
place == 7 ~ 12,
place == 8 ~ 11,
place == 9 ~ 10,
place == 10 ~ 9,
place == 11 ~ 8,
place == 12 ~ 7,
place == 13 ~ 6,
place == 14 ~ 5,
place == 15 ~ 4,
place == 16 ~ 3,
place == 17 ~ 2,
TRUE ~ 1
))
# Add new variable "points"
tot <- comp1 %>% mutate(points = case_when(
Place == 1 ~ 25,
Place == 2 ~ 22,
Place == 3 ~ 19,
Place == 4 ~ 17,
Place == 5 ~ 15,
Place == 6 ~ 13,
Place == 7 ~ 12,
Place == 8 ~ 11,
Place == 9 ~ 10,
Place == 10 ~ 9,
Place == 11 ~ 8,
Place == 12 ~ 7,
Place == 13 ~ 6,
Place == 14 ~ 5,
Place == 15 ~ 4,
Place == 16 ~ 3,
Place == 17 ~ 2,
TRUE ~ 1
))
View(tot)
## -- Change format for output - create "pivot table" with points per competition
piv_comp_1 <- tot %>%
select(Name, Place, points) %>%
spread(Place, points)
View(piv_comp_1)
# Create tabel output using kableExtra package
kable(tot) %>%
kable_styling(bootstrap_options = "striped", full_width = F, position = "left")
library(kableExtra)
# Create tabel output using kableExtra package
kable(tot) %>%
kable_styling(bootstrap_options = "striped", full_width = F, position = "left")
# Create a table with the DT package
datatable( tot
)
# Create a table with the DT package
datatable( tot,
colnames = c("Namn" = Name, "Placering" = Place, "Poäng" = points)
)
# Create a table with the DT package
datatable( tot,
colnames = c("Namn" = "Name", "Placering" = "Place", "Poäng" = "points")
)
# Create a table with the DT package
datatable( tot,
colnames = c("Namn" = "Name", "Placering" = "Place", "Poäng" = "points"),
caption = "Tabell 1: Placering efter KM, deltävling 1"
)
library(tidyverse)
library(readr)
library(readxl)
library(DT)
library(kableExtra)
library(ggplot2)
# Create a table with the DT package
datatable( tot,
colnames = c("Namn" = "Name", "Placering" = "Place", "Poäng" = "points"),
caption = "Tabell 1: Placering efter KM, deltävling 1",
options = list(dom = 't'))
# Create a table with the DT package
datatable( tot,
colnames = c("Namn" = "Name", "Placering" = "Place", "Poäng" = "points"),
caption = "Tabell 1: Placering efter KM, deltävling 1")
# Create a table with the DT package
datatable( tot,
colnames = c("Namn" = "Name", "Placering" = "Place", "Poäng" = "points"),
caption = "Tabell 1: Placering efter KM, deltävling 1",
options = list(pageLength = 18)) %>%
formatStyle('points',  color = 'steelblue', fontWeight = 'bold')
# Create a table with the DT package
datatable( tot,
colnames = c("Namn" = "Name", "Placering" = "Place", "Poäng" = "points"),
caption = "Tabell 1: Placering efter KM, deltävling 1",
options = list(pageLength = 18)) %>%
formatStyle('Poäng',  color = 'steelblue', fontWeight = 'bold')
rmarkdown::render_site()
rmarkdown::render_site()
rmarkdown::render_site()
rmarkdown::render_site()
rmarkdown::render_site()
rmarkdown::render_site()
library(tidyverse)
library(readr)
library(readxl)
library(DT)
library(kableExtra)
# Load dataset
result_hist <- read_excel("C:/Users/AndrésLagerlöf/OneDrive - Andrés Lagerlöf Konsulttjänst AB/Övrigt/Fäktning/KM/KM_webb/fff_km/KM_tabeller.xlsx")
View(result_hist)
# Create a long dataset
long_hist <- result_hist %>% gather(place, name, -1)
View(long_hist)
## I have changed original data - this not needed now
# long_hist <- long_hist %>% mutate(res =
#  case_when(
#  results == "Segrare" ~ "1:a",
#  results == "2:a" ~ "2:a",
#  results == "3:a" ~ "3:a",
#  TRUE ~ "fel"
#  ))
# Change place variable to levels
long_hist$result <- factor(long_hist$place, ordered = TRUE,
levels = c("1:a", "2:a", "3:a"))
# Create df with name and no of entries
no_top3 <- long_hist %>% group_by(name) %>% count() %>% arrange(desc(n))
View(no_top3)
# Separate name variable in no_top3 df
no_top3 <- no_top3 %>% separate(name, into = c("firstname", "lastname"))
# Create datafreme with name, result and count of result
stat2 <- long_hist %>% group_by(name, result) %>% count() %>%arrange(desc(n)) %>%  arrange(result) #%>%  arrange(desc(n))
View(stat2)
# Separate name variable in stat2 df
stat2 <- stat2 %>% separate(name, into = c("firstname", "lastname"))
# Calculate no of years
long_hist$Year %>%  n_distinct()
# Remove variable place
long_hist <- long_hist %>%  select(-place)
datatable(
long_hist,
caption = "Lista över resultat 2006 till 2018",
extensions = 'Buttons', options = list(
dom = 'Bfrtip',
buttons = c( 'csv', 'excel', 'pdf', 'print')
)
)
rmarkdown::render_site()
rmarkdown::render_site()
